<?xml version="1.0" encoding="utf-8"?><GGG><ParseTree><TranslationUnit><ExternalDeclaration><Declaration><DeclarationSpecifiers><typeSpecifiers>int</typeSpecifiers></DeclarationSpecifiers><InitDeclarator><Identifier>'i'</Identifier></InitDeclarator><InitDeclarator><Identifier>'j'</Identifier></InitDeclarator></Declaration></ExternalDeclaration><ExternalDeclaration><FunctionDefinition><DeclarationSpecifiers><typeSpecifiers>int</typeSpecifiers></DeclarationSpecifiers><Func><Identifier>'main'</Identifier></Func><CompoundStatement><BlockItemList><BlockItem><Declaration><DeclarationSpecifiers><typeSpecifiers>char</typeSpecifiers></DeclarationSpecifiers><InitDeclarator><ArrayType><ArrayType><Identifier>'c'</Identifier><size><int>3</int></size></ArrayType><size><int>3</int></size></ArrayType></InitDeclarator></Declaration></BlockItem><BlockItem><for><Assignment operator="="><Identifier>'i'</Identifier><int>0</int></Assignment><Binary operator="<"><Identifier>'i'</Identifier><int>3</int></Binary><Unary operator="++"><Identifier>'i'</Identifier></Unary><for><Assignment operator="="><Identifier>'j'</Identifier><int>0</int></Assignment><Binary operator="<"><Identifier>'j'</Identifier><int>3</int></Binary><Unary operator="++"><Identifier>'j'</Identifier></Unary><ExpressionStatement><Assignment operator="="><Postfix operator="[]"><Postfix operator="[]"><Identifier>'c'</Identifier><Identifier>'i'</Identifier></Postfix><Identifier>'j'</Identifier></Postfix><Binary operator="+"><Identifier>'i'</Identifier><Identifier>'j'</Identifier></Binary></Assignment></ExpressionStatement></for></for></BlockItem><BlockItem><return><int>0</int></return></BlockItem></BlockItemList></CompoundStatement></FunctionDefinition></ExternalDeclaration></TranslationUnit></ParseTree>

<GlobalScope><DeclScope><ValueDecl name="i"><id>0</id><offset>1</offset><width>4</width><declType><QualifiedType>int</QualifiedType></declType></ValueDecl><ValueDecl name="j"><id>1</id><offset>5</offset><width>4</width><declType><QualifiedType>int</QualifiedType></declType></ValueDecl><FunctionDecl name="main" ID="2"><QualifiedType><FunctionProtoType><returnType><QualifiedType>int</QualifiedType></returnType><FnPrototypeScope><params len="0"></params><DeclScope/></FnPrototypeScope></FunctionProtoType></QualifiedType><CompoundStmt><FnScope><DeclScope><ValueDecl name="c"><id>3</id><offset>9</offset><width>9</width><declType><QualifiedType><ConstantArrayWithExprType length="3"><QualifiedType><ConstantArrayWithExprType length="3"><QualifiedType>char</QualifiedType></ConstantArrayWithExprType></QualifiedType></ConstantArrayWithExprType></QualifiedType></declType></ValueDecl></DeclScope><labels/></FnScope><ForStmt><e1><AssignmentExpr><type><QualifiedType>int</QualifiedType></type><DeclRefExpr name="i" declID="0"><QualifiedType>int</QualifiedType></DeclRefExpr><IntegerLiteral value="0"><EvaluateResult value="0" isLvalue="False"><type><QualifiedType>int</QualifiedType></type></EvaluateResult></IntegerLiteral></AssignmentExpr></e1><e2><BinaryOperator op="<"><EvaluateResult value="None" isLvalue="False"><type><QualifiedType>int</QualifiedType></type></EvaluateResult><LvalueToRvalueExpr><DeclRefExpr name="i" declID="0"><QualifiedType>int</QualifiedType></DeclRefExpr></LvalueToRvalueExpr><IntegerLiteral value="3"><EvaluateResult value="3" isLvalue="False"><type><QualifiedType>int</QualifiedType></type></EvaluateResult></IntegerLiteral></BinaryOperator></e2><e3><UnaryOperator op="++"><DeclRefExpr name="i" declID="0"><QualifiedType>int</QualifiedType></DeclRefExpr></UnaryOperator></e3><ForStmt><e1><AssignmentExpr><type><QualifiedType>int</QualifiedType></type><DeclRefExpr name="j" declID="1"><QualifiedType>int</QualifiedType></DeclRefExpr><IntegerLiteral value="0"><EvaluateResult value="0" isLvalue="False"><type><QualifiedType>int</QualifiedType></type></EvaluateResult></IntegerLiteral></AssignmentExpr></e1><e2><BinaryOperator op="<"><EvaluateResult value="None" isLvalue="False"><type><QualifiedType>int</QualifiedType></type></EvaluateResult><LvalueToRvalueExpr><DeclRefExpr name="j" declID="1"><QualifiedType>int</QualifiedType></DeclRefExpr></LvalueToRvalueExpr><IntegerLiteral value="3"><EvaluateResult value="3" isLvalue="False"><type><QualifiedType>int</QualifiedType></type></EvaluateResult></IntegerLiteral></BinaryOperator></e2><e3><UnaryOperator op="++"><DeclRefExpr name="j" declID="1"><QualifiedType>int</QualifiedType></DeclRefExpr></UnaryOperator></e3><ExprStmt><AssignmentExpr><type><QualifiedType>char</QualifiedType></type><ArraySubscriptExpr><ImplicitCastExpr castKind="CastKind.ArrayToPointerDecayed"><type><QualifiedType><Pointer><QualifiedType>char</QualifiedType></Pointer></QualifiedType></type><ArraySubscriptExpr><ImplicitCastExpr castKind="CastKind.ArrayToPointerDecayed"><type><QualifiedType><Pointer><QualifiedType><ConstantArrayWithExprType length="3"><QualifiedType>char</QualifiedType></ConstantArrayWithExprType></QualifiedType></Pointer></QualifiedType></type><DeclRefExpr name="c" declID="3"><QualifiedType><ConstantArrayWithExprType length="3"><QualifiedType><ConstantArrayWithExprType length="3"><QualifiedType>char</QualifiedType></ConstantArrayWithExprType></QualifiedType></ConstantArrayWithExprType></QualifiedType></DeclRefExpr></ImplicitCastExpr><ImplicitCastExpr castKind="CastKind.Naive"><type><QualifiedType>long_long</QualifiedType></type><DeclRefExpr name="i" declID="0"><QualifiedType>int</QualifiedType></DeclRefExpr></ImplicitCastExpr></ArraySubscriptExpr></ImplicitCastExpr><ImplicitCastExpr castKind="CastKind.Naive"><type><QualifiedType>long_long</QualifiedType></type><DeclRefExpr name="j" declID="1"><QualifiedType>int</QualifiedType></DeclRefExpr></ImplicitCastExpr></ArraySubscriptExpr><ImplicitCastExpr castKind="CastKind.Naive"><type><QualifiedType>char</QualifiedType></type><BinaryOperator op="+"><EvaluateResult value="None" isLvalue="False"><type><QualifiedType>int</QualifiedType></type></EvaluateResult><LvalueToRvalueExpr><DeclRefExpr name="i" declID="0"><QualifiedType>int</QualifiedType></DeclRefExpr></LvalueToRvalueExpr><LvalueToRvalueExpr><DeclRefExpr name="j" declID="1"><QualifiedType>int</QualifiedType></DeclRefExpr></LvalueToRvalueExpr></BinaryOperator></ImplicitCastExpr></AssignmentExpr></ExprStmt></ForStmt></ForStmt><ReturnStmt><IntegerLiteral value="0"><EvaluateResult value="0" isLvalue="False"><type><QualifiedType>int</QualifiedType></type></EvaluateResult></IntegerLiteral></ReturnStmt></CompoundStmt></FunctionDecl></DeclScope></GlobalScope></GGG>